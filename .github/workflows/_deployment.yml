on:
  workflow_call:
    inputs:
      environment:
        type: string
        required: true
        description: Name of the target environment.
      ref:
        type: string
        required: true
        description: The tag or SHA to checkout.

jobs:
  build-and-publish:
    name: Build and Push docker image
    runs-on: ubuntu-latest
    permissions:
      contents: read
      id-token: write

    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          ref: ${{ github.ref }}

      - name: Setup Gradle
        uses: gradle/gradle-build-action@v3

      - id: auth
        name: Authenticate to Google Cloud
        # Workload Identity連携を利用してGitHub ActionsからGoogle Cloudへ認証を行う
        uses: google-github-actions/auth@v1
        with:
          token_format: access_token
          workload_identity_provider: ${{ secrets.WORKLOAD_IDENTITY_PROVIDER_ID }}
          service_account: ${{ secrets.WORKLOAD_IDENTITY_SERVICE_ACCOUNT }}

      #      - name: Set up Cloud SDK
      #        # gcloudコマンドを実行するためにCloud SDKを準備する
      #        uses: google-github-actions/setup-gcloud@v1

      - name: Docker Auth
        id: docker-auth
        uses: docker/login-action@v1
        with:
          username: oauth2accesstoken
          password: ${{ steps.auth.outputs.access_token }}
          registry: ${{ vars.REGION }}-docker.pkg.dev

      - name: Build, tag and push container
        id: build-image
        uses: docker/build-push-action@v3
        with:
          context: ${{ vars.CODE_DIRECTORY }}
          push: true
          tags: |
            ${{ vars.REGION }}-docker.pkg.dev/${{ vars.GCP_PROJECT_ID }}/${{ vars.ARTIFACT_REPO }}/${{ vars.SERVICE_NAME }}:${{ inputs.ref }}

      - name: Create Service declaration
        run: |-
          export CONTAINER_IMAGE="${{ vars.REGION }}-docker.pkg.dev/${{ vars.GCP_PROJECT_ID }}/${{ vars.ARTIFACT_REPO }}/${{ vars.SERVICE_NAME }}:${{ inputs.ref }}"
          export SERVICE_NAME="${{ vars.SERVICE_NAME }}"
          export PROJECT_ID="${{ vars.GCP_PROJECT_ID }}"
          export REVISION_TAG="${{ inputs.ref }}"
          export CLOUD_RUN_SA="${{ vars.CLOUD_RUN_SA }}"
          export ENVIRONMENT="${{ inputs.environment }}"
          envsubst < ./config/cloud-run.template.yml > container-${{ inputs.environment }}.yaml
          cat container-${{ inputs.environment }}.yaml

      - name: Deploy to Cloud Run
        id: deploy
        uses: google-github-actions/deploy-cloudrun@v2
        with:
          service: ${{ vars.service_name }}
          region: ${{ vars.region }}
          metadata: container-${{ inputs.environment }}.yaml

      - name: Use output
        run: curl "${{ steps.deploy.outputs.url }}"